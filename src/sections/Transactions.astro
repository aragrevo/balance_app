---
import { formatDate, formatMoney } from "@/lib/formatter";
import { getTransactions } from "@/services/transaction.service";
import { MoneyTypes } from "@/model/money-types.enum";

interface Transaction {
  id: string;
  description: string;
  observation: string;
  date: string;
  cost: number;
  money: string;
}

const moneyType =
  (Astro.cookies.get("money")?.value as MoneyTypes) || MoneyTypes.EUR;

const currentDate = new Date();
const startDate = new Date(
  currentDate.getFullYear(),
  currentDate.getMonth(),
  1,
);
const endDate = new Date(
  currentDate.getFullYear(),
  currentDate.getMonth() + 1,
  0,
);

const { data, error } = await getTransactions(
  startDate.toISOString(),
  endDate.toISOString(),
  moneyType,
);
---

<section class="h-full overflow-hidden">
  <div class="mb-6 flex items-center justify-between">
    <h2 class="mb-3 text-4xl font-medium text-white">Transactions</h2>
  </div>

  <div class="scrollbar-hide max-h-[75dvh] space-y-4 overflow-y-auto pb-14">
    {
      data?.map((transaction: Transaction) => {
        const description = transaction.observation
          ? `${transaction.observation}`
          : transaction.description;

        return (
          <div class="rounded-2xl bg-white/5 p-4">
            <div class="flex items-center justify-between">
              <div class="flex items-center gap-3">
                <div class="flex h-10 w-10 items-center justify-center rounded-full bg-[#070417]/40">
                  {transaction.observation ? (
                    <span class="text-sm text-white uppercase">
                      {transaction.observation.slice(0, 2)}
                    </span>
                  ) : (
                    <img
                      src={`/icons/${transaction.description}.svg`}
                      alt={transaction.money}
                      class="h-6 w-6"
                    />
                  )}
                </div>
                <div>
                  <p class="text-sm text-gray-400 capitalize">{description}</p>
                  <h3 class="text-xl font-medium text-white">
                    {formatDate(transaction.date)}
                  </h3>
                </div>
              </div>
              <span class="font-medium text-white">
                {formatMoney(transaction.cost, transaction.money)}
              </span>
            </div>
          </div>
        );
      })
    }
  </div>
</section>
