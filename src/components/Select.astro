---
const { categories, id, name } = Astro.props;
---

<select
  id={id}
  name={name}
  class="custom-select rounded-full border border-white/80 bg-transparent px-4 py-2 text-xl text-white placeholder:text-white/30 focus:outline-none"
>
  <div
    class="flex max-w-56 flex-col gap-2 overflow-hidden rounded-xl bg-[#242832] px-4 py-2"
  >
    <option
      selected
      disabled
      class="px-2 py-1 text-center text-sm text-white/20"
    >
      Choose a category
    </option>
    {
      categories?.map((category) => (
        <option
          class="max-w-64 rounded-md bg-[#242832] px-2 py-1 text-base font-bold text-[#7e8590] backdrop-blur-2xl transition-all duration-300 hover:translate-x-px hover:-translate-y-px hover:cursor-pointer hover:bg-[#382d47d5] hover:text-white"
          value={category.id}
        >
          <img
            src={`/icons/${category.id}.svg`}
            alt={category.name}
            class="h-6 w-6"
          />
          {category.name}
        </option>
      ))
    }
  </div>
</select>

<style>
  .custom-select {
    &,
    &::picker(select) {
      appearance: base-select;
    }
  }

  .custom-select {
    &::picker(select) {
      background-color: transparent;
      border: none;
      opacity: 0;
      transition: all 0.4s allow-discrete;
      max-width: 200px;
    }
    &::picker(select):popover-open {
      opacity: 1;
    }
    @starting-style {
      &::picker(select):popover-open {
        opacity: 0;
      }
    }
    &::picker(select) {
      top: calc(anchor(bottom) + 5px);
      left: 50%;
      transform: translateX(-50%);
      max-width: 200px;
    }
  }
</style>
